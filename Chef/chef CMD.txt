---Make directory
	mkdir cookbooks
---Run a recipe
	chef-client --local-mode webserver.rb
	chef-client --local-mode --runlist 'recipe[learn_chef_iis]'
	chef-client --local-mode --runlist 'recipe[xmledit::webconfig]'
	chef-client --runlist 'recipe[xmledit::webconfig]'
	chef-client --local-mode --runlist 'recipe[xmledit]'
	chef-client --runlist 'recipe[xmledit::webconfigSecure]'
	#chef-client --local-mode --runlist 'recipe[config_test]'


C:\opscode\chef\embedded\bin\gem install knife-reporting


---Check web request
	(Invoke-WebRequest -UseBasicParsing localhost).Content

---Genarate password 
	openssl passwd -1 -salt r1rcm Pa$$w0rd
	openssl passwd -1 -salt bacon eggsandtoast

---Generate cookbook
	mkdir cookbooks
	chef generate cookbook cookbooks\learn_chef_iis
	tree /F /A cookbooks

---Generate template file
---The .erb extension simply means that the file can have placeholders
	chef generate template cookbooks\learn_chef_iis Default.htm
	chef-client --local-mode --runlist 'recipe[learn_chef_iis]'

---berks utility
	berks install
	berks upload

---Knife config
	mkdir .chef
	cd .chef
	--Generate knife config
		Knife.rb
		-- #{current_dir} is where knife.rb exists
	--Get client key from chef account/administration
		username.pem
	--Check knife connection
		knife ssl check

---Knife upload cookbook
	knife cookbook upload learn_chef_iis

---Validate cookbook list
	knife cookbook list

---Verify the configuration
	knife wsman test HOSTNAME --manual-list	


---bootstrap a node
knife winrm 'name:ahv-phsdevweb01' chef-client --winrm-user $MyCredentials.UserName --winrm-password $MyCredentials.GetNetworkCredential().password -r '$runList'
knife winrm 'name:ahv-phsdevweb01' chef-client --winrm-user india\ --winrm-password '' -r 'role[apache]'

knife bootstrap windows winrm ADDRESS --winrm-user USER --winrm-password 'PASSWORD' --node-name node1-windows --run-list 'recipe[learn_chef_iis]'
knife bootstrap windows winrm 'AHVA2APL5COR01.dev.accretivehealth.local' --winrm-user username --winrm-password 'pwd' --node-name AHVA2APL5COR01 --run-list 'recipe[config_test]'

---Create databags
	knife data bag create databagName
	Knife data bag from file databagName ./datbagfile.json
	Knife data bag list
	Knife data bag show datbagName
	Knife data bag show datbagName dataKeyName
	knife data bag edit admins datbagName
knife data bag show RCM_WEB_Secure appSettings --secret-file .\my_secret_key
knife data bag show RCM_WEB_Secure connectionStrings --secret 'key'
Knife cookbook upload xmledit

Knife data bag from file RCM_WEB_Secure ./data_bags/appSettings.json --secret-file .\my_secret_key 
Knife data bag from file RCM_WEB_Secure ./data_bags/appSettings.json --secret ''
Knife data bag from file RCM_WEB_Secure ./data_bags/connectionStrings.json --secret-file .\my_secret_key 
Knife data bag from file RCM_WEB_Secure ./data_bags/connectionStrings.json --secret ''
Knife data bag from file RCM_WEB_Secure ./data_bags/appSettings_QA.json --secret 'RoceHTSbwMMPQ49mzHPHh1u2WUSrLLmzF/tPKzgexrEC8o2hj64vFUZyx5ABlXxP5NOFmqX2Beq/cl4sc8nCb4BS+MoPtYyPiaN1arDB49Gmk2fKLT2iAc0koyM4EVaApquKd3CVdO1evc25MmAVOVztJZm7L6mKkvHKl2TNjKbbpD0BQkHG3r726AfXSr8hWSthk9h5b3bXB+HNdu7bYQ5g8WuGsc04XdtAlGw2ajrOaxixyhOITCCG6cJqQDfQPa4EXR5pMPb/E2iNVVSkwYtf3F4AOApIdcmWVydINo3TrT9YO7eEATXpSwsEDbXH+yDuV5Vmtbcz6V+bpEa2FBSN8XNFulAsWOQYnrrqEv8wBHK2n3sxMzprTamRldRyeJrPuTdVIBIT59F1nC5P3JYJj8Nddik7SUIh7SguKLpITtPdLhDanPuFrSoeCD8pZr0NkCWIY/EnELXQuqkkWamDEH4gChDfluT0gQ7YIPb3vVQefannFPsclc1bsfnHKPjN4QI52skn8KCMFklDApDArXp+VsFoA1zz1majyZPzYwtzftZk0FvhtL71j+mBOjbyRDSCvi7DEhlDcvXcVkNHOACsPznPhhtmed88E/2IkbGAmi1rpIZXOGrC5BaQv1n0cBwi9YKNpL/BQUfLQ6lL+QPIpezMbOibcbH86a4='


	
	knife node run_list set ahv-phsdevweb01 'recipe[xmledit::webconfig]'
	knife node run_list set $Node "recipe[copy_builds::$ProjectName],recipe[install_build]"

--- Create secret
	openssl rand -base64 512 | tr -d '\r\n' > encrypted_data_bag_secret
	openssl rand -base64 512 | tr -d '\r\n' > my_secret_key

--- Add secret key to chef client.rb file 
	encrypted_data_bag_secret

--- set default text editor 
	knife[:editor] = '"C:\Program Files (x86)\vim\vim74\gvim.exe"'


--- Ruby check syntax
	ruby -c my_cookbook_file.rb


---get VM details
	Get-VM -Name "WindowsServer2012R2" | select -ExpandProperty NetworkAdapters | select IPAddresses
---Configure the firewall to accept remote WinRM connections
	Get-NetFirewallPortFilter | ?{$_.LocalPort -eq 5985 } | Get-NetFirewallRule | ?{ $_.Direction –eq "Inbound" -and $_.Profile -eq "Public" -and $_.Action –eq "Allow"} | Set-NetFirewallRule -RemoteAddress "Any"
	
